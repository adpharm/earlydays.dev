---
import Layout from "../../_layout.astro";
import { sessionsTable, usersTable } from "@/schema";
import { eq, and, gt } from "drizzle-orm";
import { db } from "@/db";
import { AdminNavigation } from "@/components/AdminNavigation";
import { SelectPost, postsTable } from "@/schema";
import { CircleArrowLeft } from "lucide-react";
import Editor from "@/components/Editor";

const sessionToken = Astro.cookies.get("sessionCookie")?.value;

if (!sessionToken) {
  return new Response(null, {
    status: 302,
    headers: { Location: "/login" },
  });
}

const now = new Date();
const [session] = await db
  .select()
  .from(sessionsTable)
  .where(
    and(eq(sessionsTable.token, sessionToken), gt(sessionsTable.expiresAt, now))
  );

if (!session) {
  return new Response(null, {
    status: 302,
    headers: { Location: "/login" },
  });
}

// Fetch the user
const [user] = await db
  .select()
  .from(usersTable)
  .where(eq(usersTable.id, session.userId));
const { docId } = Astro.params;

let post: SelectPost;
let error: string | null = null;
let loading = true;

try {
  // Convert docId to a number
  const postId = Number(docId);

  if (isNaN(postId)) {
    throw new Error("Invalid post ID.");
  }

  // Fetch the post directly from the database
  const fetchedPosts = await db
    .select()
    .from(postsTable)
    .where(eq(postsTable.id, postId));

  const fetchedPost = fetchedPosts.at(0);

  if (!fetchedPost) {
    throw new Error("Post not found.");
  }

  post = fetchedPost;
} catch (err) {
  error = err instanceof Error ? err.message : "Failed to fetch the post.";
  console.error(err);

  // Redirect if post not found or an error occurs
  return new Response(null, {
    status: 302,
    headers: { Location: "/admin" },
  });
} finally {
  loading = false;
}

if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();
  const updatedData = {
    title: formData.get("title"),
    content: formData.get("content"),
    // Add other fields as necessary
  };

  // Update the post logic goes here...

  // Redirect after successful update
  return new Response(null, {
    status: 302,
    headers: { Location: "/admin" },
  });
}
---

<Layout>
  <AdminNavigation client:load />

  <div class="min-h-screen bg-gradient-to-r from-pink-50 to-pink-100">
    <div
      class="max-w-5xl mx-auto p-4 flex flex-col justify-start items-center space-y-4"
    >
      <div
        class="w-full flex flex-row justify-start items-center space-x-2 mt-2"
      >
        <a href="/admin"
          ><CircleArrowLeft size={32} className="text-pink-600" /></a
        >
        <h1 class="text-2xl font-semibold text-pink-700">Create a New Post</h1>
      </div>
      <!-- Editor Wrapper -->
      <div class="bg-white shadow rounded-md py-10 w-full">
        <Editor user={user} post={post} client:only="react" />
      </div>
    </div>
  </div>
</Layout>
